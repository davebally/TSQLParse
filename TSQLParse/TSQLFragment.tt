
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
//  TSQLFragment.cs is built from the T4 template fragment.tt.  Do NOT change this file,  change the .tt
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.SqlServer.TransactSql.ScriptDom;
using System.Diagnostics;
using System.IO;

<#
  Type[] TypesInAssembly = null;
  string AssemblyName = string.Empty;
  string AssemblyPath = string.Empty;
  string ExecutingAssemblyPath = string.Empty;
  object Result, DecryptedResult = null;

  //AssemblyPath = "C:\\Program Files (x86)\\Microsoft SQL Server\\130\\SDK\\Assemblies\\Microsoft.SqlServer.TransactSql.ScriptDom.dll";
  AssemblyPath = "C:\\Program Files (x86)\\Microsoft SQL Server\\130\\SDK\\Assemblies\\Microsoft.SqlServer.TransactSql.ScriptDom.dll";
            
  System.Reflection.Assembly MyAssembly =   System.Reflection.Assembly.LoadFrom(AssemblyPath);

  TypesInAssembly = MyAssembly.GetTypes();


#>

namespace TSQLParse.TSqlFragmentProcess
{
       class TSqlFragmentProcess
       {
              //public Explorer Explorer;

              public int ID=0;
              StreamWriter file;
              string user;
			  ProcessFunctions prcFuncs;
              public TSqlFragmentProcess(TSqlFragment StartFrg,ProcessFunctions funcs){
				this.prcFuncs = funcs;
              this.ProcessTSQLFragment(StartFrg);

              }

              private void SchemaHandling(Microsoft.SqlServer.TransactSql.ScriptDom.SchemaObjectName currentFragment)
               {
					 prcFuncs.OnSchemaObjectName(currentFragment);
           }

                     
<#
              foreach(System.Type t in TypesInAssembly){
                     if (isBaseTSqlFragment(t)){
                           string s = t.Name;
                           string [] words = s.Split('.');
                           string Class = words[words.Length-1];

#>


                     private void Process<#=Class#>(Microsoft.SqlServer.TransactSql.ScriptDom.<#=s#> currentFragment)
               {
                                         
<#
//     Add the types you wish to process here
                               if(s=="SchemaObjectName"){
                               #>
                                     prcFuncs.OnSchemaObjectName(currentFragment);

                               <#
                               }

							   if(s=="DropTableStatement"){
							   #>
                                     prcFuncs.OnDropTableStatement(currentFragment);

                               <#
							   
							   }
                                         System.Reflection.MethodInfo[] MethodsCollection = t.GetMethods();
                        foreach (var m in MethodsCollection)
                        {
                                                string l=m.Name;                                                            
                                                l=l.Replace("get_","");
                                                if(isBaseTSqlFragment(m.ReturnType) && l!="Item"){
#>
                                                       ProcessTSQLFragment(currentFragment.<#=l#>);
<#
                                                       continue;
                                                }
                            if (m.Name.Length>=5 && m.Name.Substring(0, 4) == "get_")
                            {
                                if (m.ReturnType.Name.Length>5 && m.ReturnType.Name.Substring(0, 5) == "IList")
                                {
                                                              
                                                                Type itemType = m.ReturnType.GetGenericArguments()[0]; 
                                                              string f=m.Name;
                                                              
                                                              f=f.Replace("get_","");
                                                              if(isBaseTSqlFragment(itemType)){
#>
                                                       
                                                       {
                                                              
                                                       foreach(var i in currentFragment.<#=f#>){
                                                              ProcessTSQLFragment(i);
                                                              
                                                       
                                                       }
                                                       }

<#
                                                              }
                                }else{
                                                              string f=m.Name;
                                                              
                                                              f=f.Replace("get_","");
                                                              if(f!="Item"){
#>
                                                       
<#                                              
                                                              }      
                                                       
                                                       }
                                
                            }

                        }

#>
                     } // End

<#

                     }
              }

#>

              public void ProcessTSQLFragment(TSqlFragment currentFragment){
                     if(currentFragment==null)return;
                     var s = currentFragment.GetType().ToString();
                     //var newItem=AddTSqlFragment(currentFragment);

            switch (currentFragment.GetType().ToString())
            {

<#
                     foreach(System.Type t in TypesInAssembly){
                           if (isBaseTSqlFragment(t)){
                                  string s = t.Name;
                           string [] words = s.Split('.');
                           string Class = words[words.Length-1];
#>            
                           case "<#=t#>":
                                  Process<#=Class#>((<#=t#>)currentFragment);//,newItem);
                                  break;
<#
                           }
                     }

#>
                     }// EndSwitch

              
              }
              

       }
}


<#+

public bool isBaseTSqlFragment(System.Type t)
        {
            System.Type b = t.BaseType;
            while (b != null)
            {
                if (b.Name == "TSqlFragment")
                {
                    break;

                }
                b = b.BaseType;

            }
            if(b==null)return false;
            return true;
        }


#>
